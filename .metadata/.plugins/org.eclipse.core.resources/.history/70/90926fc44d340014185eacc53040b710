package Menu;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.LinkedList;

import Interface.Game;
import Interface.Handler;
import Interface.Texture;
import Objects.GameObject;
import Objects.ObjectId;

public class ColorsButton extends GameObject{

	Handler handler;
	
	float spacing;
	
	float xSpace;
	
	Texture tex = Game.getInstance();
	
	public ColorsButton(float x, float y, Handler handler, ObjectId id) {
		super(x, y, id);
		this.handler = handler;
		this.setWidth(300);
		this.setHeight(60);
		spacing = height + 19;
		xSpace = 35;
	}

	public void tick(LinkedList<GameObject> object) {
		
	}

	public void render(Graphics g) {
		if(!handler.getColorSelection()){
			g.setColor(Color.CYAN);
			g.fillRect((int)(x + xSpace), (int)y, (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+spacing), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*3)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*4)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*5)), (int)(width - (xSpace*2)), (int)height);
			
			g.drawImage(tex.color[0], (int)x, (int)y, (int)width, (int)height, null);
			g.drawImage(tex.color[1], (int)x, (int)(y+spacing), (int)width, (int)height, null);
			g.drawImage(tex.color[2], (int)x, (int)(y+(spacing*2)), (int)width, (int)height, null);
			g.drawImage(tex.color[3], (int)x, (int)(y+(spacing*3)), (int)width, (int)height, null);
			g.drawImage(tex.color[4], (int)x, (int)(y+(spacing*4)), (int)width, (int)height, null);
			g.drawImage(tex.main[13], (int)x, (int)(y+(spacing*5)), (int)width, (int)height, null);
			
			Graphics2D g2d = (Graphics2D) g;
			g.setColor(Color.RED);
			g2d.draw(getBounds());
		}
		else{
			g.setColor(Color.LIGHT_GRAY);
			g.fillRect((int)(x + xSpace), (int)y, (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+spacing), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*3)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*4)), (int)(width - (xSpace*2)), (int)height);
			g.fillRect((int)(x + xSpace), (int)(y+(spacing*5)), (int)(width - (xSpace*2)), (int)height);
			
			g.drawImage(tex.color[0], (int)x, (int)y, (int)width, (int)height, null);
			g.drawImage(tex.color[1], (int)x, (int)(y+spacing), (int)width, (int)height, null);
			g.drawImage(tex.color[2], (int)x, (int)(y+(spacing*2)), (int)width, (int)height, null);
			g.drawImage(tex.color[3], (int)x, (int)(y+(spacing*3)), (int)width, (int)height, null);
			g.drawImage(tex.color[4], (int)x, (int)(y+(spacing*4)), (int)width, (int)height, null);
			g.drawImage(tex.main[13], (int)x, (int)(y+(spacing*5)), (int)width, (int)height, null);
			
			Graphics2D g2d = (Graphics2D) g;
			g.setColor(Color.BLUE);
			g2d.draw(getBounds());
			
			
			g.setColor(handler.availableColor.get(0));
			g.fillRect((int)(x + xSpace + width), (int)y, (int)(width - (xSpace*2)), (int)height);
			g.setColor(handler.availableColor.get(1));
			g.fillRect((int)(x + xSpace + width), (int)(y+spacing), (int)(width - (xSpace*2)), (int)height);
			g.setColor(handler.availableColor.get(2));
			g.fillRect((int)(x + xSpace + width), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			g.setColor(handler.color.get(handler.getColorsOption()));
			g.fillRect((int)(x + xSpace + width), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			
			Graphics2D g2d2 = (Graphics2D) g;
			g.setColor(Color.BLACK);
			g2d2.draw(getBounds());
		}
		
	}

	public Rectangle getBounds() {
		if(!handler.getColorSelection()){
			if(handler.getColorsOption() == 0){
				return new Rectangle((int)(x + xSpace), (int)y, (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorsOption() == 1){
				return new Rectangle((int)(x + xSpace), (int)(y+spacing), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorsOption() == 2){
				return new Rectangle((int)(x + xSpace), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorsOption() == 3){
				return new Rectangle((int)(x + xSpace), (int)(y+(spacing*3)), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorsOption() == 4){
				return new Rectangle((int)(x + xSpace), (int)(y+(spacing*4)), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorsOption() == 5){
				return new Rectangle((int)(x + xSpace), (int)(y+(spacing*5)), (int)(width - (xSpace*2)), (int)height);
			}
			System.out.println("*Settings Option Problem 1.*");
		}
		else if(handler.getColorSelection()){
			if(handler.getColorSelectionOption() == 0){
				return new Rectangle((int)(x + xSpace + width), (int)y, (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorSelectionOption() == 1){
				return new Rectangle((int)(x + xSpace + width), (int)(y+spacing), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorSelectionOption() == 2){
				return new Rectangle((int)(x + xSpace + width), (int)(y+(spacing*2)), (int)(width - (xSpace*2)), (int)height);
			}
			else if(handler.getColorSelectionOption() == 3){
				return new Rectangle((int)(x + xSpace + width), (int)(y+(spacing*3)), (int)(width - (xSpace*2)), (int)height);
			}
			System.out.println("*Settings Option Problem 1.*");
		}
		return null;
	}
}